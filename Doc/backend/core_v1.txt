Console:
控制台类，内含message类
message有category和level属性（比如网络类别，报错等级）
维护一个message队列
用来处理事务信息,比如报错
JsonSettings:
维护一个本地的json文档，
// QT数据库的知识 https://www.xinbaoku.com/archive/2AcqsEIy.html

HistoryModel:

model类，内含Entry类，作为项
定义了enum类型 HistoryEntryRole, HistoryType作为角色，给项赋值。
Entry:
void setData(const QVariant &value, int role) override;
void setItemData(const QVariant &value, int role);
QString getTitle() const;
QUrl getUrl() const;
QDateTime getTimeVisited() const;
QIcon getIcon() const;
quint64 getIdentifier() const; //获取用户编号

m_urls:  键值对，一个url可以有多个entry
M_identifiers:  map，用户编号和对应的entry

创建该类时需要读取本地json文件，修改该类后会保存修改到本地json文件

Utils：
normalizeUrl()



BrowserWindow:
    TabWidget*
    Navigation*
    BookMarksToolBar*

TabWidget: QTabWidget
    WebTab*

WebTab: Qwidget
    TabbedWebView*

TabbedWebView: WebView













目录结构:(相当于模块的概念了)
Windows(Windows需用的特定的文件)
Mac
linux
data//浏览器产生的本地数据
src//以下模块也主要是指文件夹（.h .cpp文件夹存放在里头）
    3rdparty//第三方库
    app
    Bookmarks
    history
    network
    navigation
    webtab
    useragent
cmakelists



问题:


优化：
1, 基本功能做完后，也许后期可以尝试加一个start after crash处理
2, 后期拓展时可以考虑给浏览器加一些快捷键
3, 后期拓展可以考虑加菜单Menu,SideBar在BrowserWindow类中
4, 先做完win后期有空再拓展Mac、linux


其他:
1, 一些类可能扩展成多类，如Navigation在上面书写中只是一个咧，然而在实际开发中可能会不断扩展类似falkon中的NavigationBar,NavigationContainer, UserAgentManager等类似的还有BookMark、History等，
也可以说是模块的概念
2，一个类（如A）包含一个类（如B）的指针还是该类？如果A中的B要频繁更换，建议含类B的指针，如BrowserWindow含有的是TabWidget*
3, 广告拦截可放入
