The system is: Darwin - 18.7.0 - x86_64
Compiling the CXX compiler identification source file "CMakeCXXCompilerId.cpp" succeeded.
Compiler: /usr/bin/clang++ 
Build flags: 
Id flags:  

The output was:
0


Compilation of the CXX compiler identification source "CMakeCXXCompilerId.cpp" produced "a.out"

The CXX compiler identification is AppleClang, found in "/Users/cuddly/Desktop/temp_work/软设跑跑跑/提交的版本/v1/FolkTell/FolkTell/build-FolkTell-Qt_6_2_4_for_macOS-Debug/CMakeFiles/3.21.1/CompilerIdCXX/a.out"

Detecting CXX compiler ABI info compiled with the following output:
Change Dir: /Users/cuddly/Desktop/temp_work/软设跑跑跑/提交的版本/v1/FolkTell/FolkTell/build-FolkTell-Qt_6_2_4_for_macOS-Debug/CMakeFiles/CMakeTmp

Run Build Command(s):/Users/cuddly/Qt/Tools/Ninja/ninja cmTC_b4666 && [1/2] Building CXX object CMakeFiles/cmTC_b4666.dir/CMakeCXXCompilerABI.cpp.o
Apple LLVM version 10.0.1 (clang-1001.0.46.4)
Target: x86_64-apple-darwin18.7.0
Thread model: posix
InstalledDir: /Library/Developer/CommandLineTools/usr/bin
clang: warning: -Wl,-v: 'linker' input unused [-Wunused-command-line-argument]
 "/Library/Developer/CommandLineTools/usr/bin/clang" -cc1 -triple x86_64-apple-macosx10.14.0 -Wdeprecated-objc-isa-usage -Werror=deprecated-objc-isa-usage -emit-obj -mrelax-all -disable-free -disable-llvm-verifier -discard-value-names -main-file-name CMakeCXXCompilerABI.cpp -mrelocation-model pic -pic-level 2 -mthread-model posix -mdisable-fp-elim -fno-strict-return -masm-verbose -munwind-tables -target-cpu penryn -dwarf-column-info -debugger-tuning=lldb -target-linker-version 450.3 -v -coverage-notes-file /Users/cuddly/Desktop/temp_work/软设跑跑跑/提交的版本/v1/FolkTell/FolkTell/build-FolkTell-Qt_6_2_4_for_macOS-Debug/CMakeFiles/CMakeTmp/CMakeFiles/cmTC_b4666.dir/CMakeCXXCompilerABI.cpp.gcno -resource-dir /Library/Developer/CommandLineTools/usr/lib/clang/10.0.1 -dependency-file CMakeFiles/cmTC_b4666.dir/CMakeCXXCompilerABI.cpp.o.d -skip-unused-modulemap-deps -sys-header-deps -MT CMakeFiles/cmTC_b4666.dir/CMakeCXXCompilerABI.cpp.o -stdlib=libc++ -Wno-atomic-implicit-seq-cst -Wno-framework-include-private-from-public -Wno-atimport-in-framework-header -Wno-quoted-include-in-framework-header -fdeprecated-macro -fdebug-compilation-dir /Users/cuddly/Desktop/temp_work/软设跑跑跑/提交的版本/v1/FolkTell/FolkTell/build-FolkTell-Qt_6_2_4_for_macOS-Debug/CMakeFiles/CMakeTmp -ferror-limit 19 -fmessage-length 0 -stack-protector 1 -fblocks -fencode-extended-block-signature -fregister-global-dtors-with-atexit -fobjc-runtime=macosx-10.14.0 -fcxx-exceptions -fexceptions -fmax-type-align=16 -fdiagnostics-show-option -o CMakeFiles/cmTC_b4666.dir/CMakeCXXCompilerABI.cpp.o -x c++ /Users/cuddly/Qt/Tools/CMake/CMake.app/Contents/share/cmake-3.21/Modules/CMakeCXXCompilerABI.cpp
clang -cc1 version 10.0.1 (clang-1001.0.46.4) default target x86_64-apple-darwin18.7.0
ignoring nonexistent directory "/usr/include/c++/v1"
#include "..." search starts here:
#include <...> search starts here:
 /Library/Developer/CommandLineTools/usr/include/c++/v1
 /usr/local/include
 /Library/Developer/CommandLineTools/usr/lib/clang/10.0.1/include
 /Library/Developer/CommandLineTools/usr/include
 /usr/include
 /System/Library/Frameworks (framework directory)
 /Library/Frameworks (framework directory)
End of search list.
[2/2] Linking CXX executable cmTC_b4666
Apple LLVM version 10.0.1 (clang-1001.0.46.4)
Target: x86_64-apple-darwin18.7.0
Thread model: posix
InstalledDir: /Library/Developer/CommandLineTools/usr/bin
 "/Library/Developer/CommandLineTools/usr/bin/ld" -demangle -lto_library /Library/Developer/CommandLineTools/usr/lib/libLTO.dylib -dynamic -arch x86_64 -macosx_version_min 10.14.0 -o cmTC_b4666 -search_paths_first -headerpad_max_install_names -v CMakeFiles/cmTC_b4666.dir/CMakeCXXCompilerABI.cpp.o -lc++ -lSystem /Library/Developer/CommandLineTools/usr/lib/clang/10.0.1/lib/darwin/libclang_rt.osx.a
@(#)PROGRAM:ld  PROJECT:ld64-450.3
BUILD 18:16:53 Apr  5 2019
configured to support archs: armv6 armv7 armv7s arm64 arm64e arm64_32 i386 x86_64 x86_64h armv6m armv7k armv7m armv7em
Library search paths:
	/usr/lib
	/usr/local/lib
Framework search paths:
	/Library/Frameworks/
	/System/Library/Frameworks/



Parsed CXX implicit include dir info from above output: rv=done
  found start of include info
  found start of implicit include info
    add: [/Library/Developer/CommandLineTools/usr/include/c++/v1]
    add: [/usr/local/include]
    add: [/Library/Developer/CommandLineTools/usr/lib/clang/10.0.1/include]
    add: [/Library/Developer/CommandLineTools/usr/include]
    add: [/usr/include]
  end of search list found
  collapse include dir [/Library/Developer/CommandLineTools/usr/include/c++/v1] ==> [/Library/Developer/CommandLineTools/usr/include/c++/v1]
  collapse include dir [/usr/local/include] ==> [/usr/local/include]
  collapse include dir [/Library/Developer/CommandLineTools/usr/lib/clang/10.0.1/include] ==> [/Library/Developer/CommandLineTools/usr/lib/clang/10.0.1/include]
  collapse include dir [/Library/Developer/CommandLineTools/usr/include] ==> [/Library/Developer/CommandLineTools/usr/include]
  collapse include dir [/usr/include] ==> [/usr/include]
  implicit include dirs: [/Library/Developer/CommandLineTools/usr/include/c++/v1;/usr/local/include;/Library/Developer/CommandLineTools/usr/lib/clang/10.0.1/include;/Library/Developer/CommandLineTools/usr/include;/usr/include]


Parsed CXX implicit link information from above output:
  link line regex: [^( *|.*[/\])(ld|CMAKE_LINK_STARTFILE-NOTFOUND|([^/\]+-)?ld|collect2)[^/\]*( |$)]
  ignore line: [Change Dir: /Users/cuddly/Desktop/temp_work/软设跑跑跑/提交的版本/v1/FolkTell/FolkTell/build-FolkTell-Qt_6_2_4_for_macOS-Debug/CMakeFiles/CMakeTmp]
  ignore line: []
  ignore line: [Run Build Command(s):/Users/cuddly/Qt/Tools/Ninja/ninja cmTC_b4666 && [1/2] Building CXX object CMakeFiles/cmTC_b4666.dir/CMakeCXXCompilerABI.cpp.o]
  ignore line: [Apple LLVM version 10.0.1 (clang-1001.0.46.4)]
  ignore line: [Target: x86_64-apple-darwin18.7.0]
  ignore line: [Thread model: posix]
  ignore line: [InstalledDir: /Library/Developer/CommandLineTools/usr/bin]
  ignore line: [clang: warning: -Wl -v: 'linker' input unused [-Wunused-command-line-argument]]
  ignore line: [ "/Library/Developer/CommandLineTools/usr/bin/clang" -cc1 -triple x86_64-apple-macosx10.14.0 -Wdeprecated-objc-isa-usage -Werror=deprecated-objc-isa-usage -emit-obj -mrelax-all -disable-free -disable-llvm-verifier -discard-value-names -main-file-name CMakeCXXCompilerABI.cpp -mrelocation-model pic -pic-level 2 -mthread-model posix -mdisable-fp-elim -fno-strict-return -masm-verbose -munwind-tables -target-cpu penryn -dwarf-column-info -debugger-tuning=lldb -target-linker-version 450.3 -v -coverage-notes-file /Users/cuddly/Desktop/temp_work/软设跑跑跑/提交的版本/v1/FolkTell/FolkTell/build-FolkTell-Qt_6_2_4_for_macOS-Debug/CMakeFiles/CMakeTmp/CMakeFiles/cmTC_b4666.dir/CMakeCXXCompilerABI.cpp.gcno -resource-dir /Library/Developer/CommandLineTools/usr/lib/clang/10.0.1 -dependency-file CMakeFiles/cmTC_b4666.dir/CMakeCXXCompilerABI.cpp.o.d -skip-unused-modulemap-deps -sys-header-deps -MT CMakeFiles/cmTC_b4666.dir/CMakeCXXCompilerABI.cpp.o -stdlib=libc++ -Wno-atomic-implicit-seq-cst -Wno-framework-include-private-from-public -Wno-atimport-in-framework-header -Wno-quoted-include-in-framework-header -fdeprecated-macro -fdebug-compilation-dir /Users/cuddly/Desktop/temp_work/软设跑跑跑/提交的版本/v1/FolkTell/FolkTell/build-FolkTell-Qt_6_2_4_for_macOS-Debug/CMakeFiles/CMakeTmp -ferror-limit 19 -fmessage-length 0 -stack-protector 1 -fblocks -fencode-extended-block-signature -fregister-global-dtors-with-atexit -fobjc-runtime=macosx-10.14.0 -fcxx-exceptions -fexceptions -fmax-type-align=16 -fdiagnostics-show-option -o CMakeFiles/cmTC_b4666.dir/CMakeCXXCompilerABI.cpp.o -x c++ /Users/cuddly/Qt/Tools/CMake/CMake.app/Contents/share/cmake-3.21/Modules/CMakeCXXCompilerABI.cpp]
  ignore line: [clang -cc1 version 10.0.1 (clang-1001.0.46.4) default target x86_64-apple-darwin18.7.0]
  ignore line: [ignoring nonexistent directory "/usr/include/c++/v1"]
  ignore line: [#include "..." search starts here:]
  ignore line: [#include <...> search starts here:]
  ignore line: [ /Library/Developer/CommandLineTools/usr/include/c++/v1]
  ignore line: [ /usr/local/include]
  ignore line: [ /Library/Developer/CommandLineTools/usr/lib/clang/10.0.1/include]
  ignore line: [ /Library/Developer/CommandLineTools/usr/include]
  ignore line: [ /usr/include]
  ignore line: [ /System/Library/Frameworks (framework directory)]
  ignore line: [ /Library/Frameworks (framework directory)]
  ignore line: [End of search list.]
  ignore line: [[2/2] Linking CXX executable cmTC_b4666]
  ignore line: [Apple LLVM version 10.0.1 (clang-1001.0.46.4)]
  ignore line: [Target: x86_64-apple-darwin18.7.0]
  ignore line: [Thread model: posix]
  ignore line: [InstalledDir: /Library/Developer/CommandLineTools/usr/bin]
  link line: [ "/Library/Developer/CommandLineTools/usr/bin/ld" -demangle -lto_library /Library/Developer/CommandLineTools/usr/lib/libLTO.dylib -dynamic -arch x86_64 -macosx_version_min 10.14.0 -o cmTC_b4666 -search_paths_first -headerpad_max_install_names -v CMakeFiles/cmTC_b4666.dir/CMakeCXXCompilerABI.cpp.o -lc++ -lSystem /Library/Developer/CommandLineTools/usr/lib/clang/10.0.1/lib/darwin/libclang_rt.osx.a]
    arg [/Library/Developer/CommandLineTools/usr/bin/ld] ==> ignore
    arg [-demangle] ==> ignore
    arg [-lto_library] ==> ignore, skip following value
    arg [/Library/Developer/CommandLineTools/usr/lib/libLTO.dylib] ==> skip value of -lto_library
    arg [-dynamic] ==> ignore
    arg [-arch] ==> ignore
    arg [x86_64] ==> ignore
    arg [-macosx_version_min] ==> ignore
    arg [10.14.0] ==> ignore
    arg [-o] ==> ignore
    arg [cmTC_b4666] ==> ignore
    arg [-search_paths_first] ==> ignore
    arg [-headerpad_max_install_names] ==> ignore
    arg [-v] ==> ignore
    arg [CMakeFiles/cmTC_b4666.dir/CMakeCXXCompilerABI.cpp.o] ==> ignore
    arg [-lc++] ==> lib [c++]
    arg [-lSystem] ==> lib [System]
    arg [/Library/Developer/CommandLineTools/usr/lib/clang/10.0.1/lib/darwin/libclang_rt.osx.a] ==> lib [/Library/Developer/CommandLineTools/usr/lib/clang/10.0.1/lib/darwin/libclang_rt.osx.a]
  Library search paths: [;/usr/lib;/usr/local/lib]
  Framework search paths: [;/Library/Frameworks/;/System/Library/Frameworks/]
  remove lib [System]
  remove lib [/Library/Developer/CommandLineTools/usr/lib/clang/10.0.1/lib/darwin/libclang_rt.osx.a]
  collapse library dir [/usr/lib] ==> [/usr/lib]
  collapse library dir [/usr/local/lib] ==> [/usr/local/lib]
  collapse framework dir [/Library/Frameworks/] ==> [/Library/Frameworks]
  collapse framework dir [/System/Library/Frameworks/] ==> [/System/Library/Frameworks]
  implicit libs: [c++]
  implicit objs: []
  implicit dirs: [/usr/lib;/usr/local/lib]
  implicit fwks: [/Library/Frameworks;/System/Library/Frameworks]


Determining if the include file pthread.h exists passed with the following output:
Change Dir: /Users/cuddly/Desktop/temp_work/软设跑跑跑/提交的版本/v1/FolkTell/FolkTell/build-FolkTell-Qt_6_2_4_for_macOS-Debug/CMakeFiles/CMakeTmp

Run Build Command(s):/Users/cuddly/Qt/Tools/Ninja/ninja cmTC_6c754 && [1/2] Building CXX object CMakeFiles/cmTC_6c754.dir/CheckIncludeFile.cxx.o
[2/2] Linking CXX executable cmTC_6c754



Performing C++ SOURCE FILE Test CMAKE_HAVE_LIBC_PTHREAD succeeded with the following output:
Change Dir: /Users/cuddly/Desktop/temp_work/软设跑跑跑/提交的版本/v1/FolkTell/FolkTell/build-FolkTell-Qt_6_2_4_for_macOS-Debug/CMakeFiles/CMakeTmp

Run Build Command(s):/Users/cuddly/Qt/Tools/Ninja/ninja cmTC_429ef && [1/2] Building CXX object CMakeFiles/cmTC_429ef.dir/src.cxx.o
[2/2] Linking CXX executable cmTC_429ef


Source file was:
#include <pthread.h>

static void* test_func(void* data)
{
  return data;
}

int main(void)
{
  pthread_t thread;
  pthread_create(&thread, NULL, test_func, NULL);
  pthread_detach(thread);
  pthread_cancel(thread);
  pthread_join(thread, NULL);
  pthread_atfork(NULL, NULL, NULL);
  pthread_exit(NULL);

  return 0;
}

Performing C++ SOURCE FILE Test HAVE_STDATOMIC succeeded with the following output:
Change Dir: /Users/cuddly/Desktop/temp_work/软设跑跑跑/提交的版本/v1/FolkTell/FolkTell/build-FolkTell-Qt_6_2_4_for_macOS-Debug/CMakeFiles/CMakeTmp

Run Build Command(s):/Users/cuddly/Qt/Tools/Ninja/ninja cmTC_84d9f && [1/2] Building CXX object CMakeFiles/cmTC_84d9f.dir/src.cxx.o
[2/2] Linking CXX executable cmTC_84d9f


Source file was:
#include <atomic>
#include <cstdint>

void test(volatile std::atomic<std::int64_t> &a)
{
    std::int64_t v = a.load(std::memory_order_acquire);
    while (!a.compare_exchange_strong(v, v + 1,
                                      std::memory_order_acq_rel,
                                      std::memory_order_acquire)) {
        v = a.exchange(v - 1);
    }
    a.store(v + 1, std::memory_order_release);
}

int main(int, char **)
{
    void *ptr = (void*)0xffffffc0; // any random pointer
    test(*reinterpret_cast<std::atomic<std::int64_t> *>(ptr));
    return 0;
}
